# default to the python provider
providers = ['python']

# set up some variables to minimize annoyance
[variables]
    NEXT_TELEMETRY_DISABLED = '1' # disable next telemetry
    NPM_CONFIG_UPDATE_NOTIFIER = 'false' # disable npm update notifications
    NPM_CONFIG_FUND = 'false' # disable npm fund notifications
    PIP_DISABLE_PIP_VERSION_CHECK = '1' # disable pip version checks
    PYTHONUNBUFFERED = '1' # ensure Python output is not buffered

# default setup phase
[phases.setup]
    nixPkgs = ['python310', 'unzip', 'parallel'] # specify the Python version, unzip, and parallel
    nixLibs = ['zlib'] # ensure zlib is installed for gzip-related tasks

# install python dependencies from requirements.txt
[phases.install]
    cmds = ['pip install --no-cache-dir -r requirements.txt'] # install dependencies from requirements.txt

# reflex init phase
[phases.init]
    dependsOn = ['install'] # run after the install phase
    cmds = ['reflex init'] # initialize the app with the latest template

# export frontend phase
[phases.export]
    dependsOn = ['init'] # run after init
    cmds = ['reflex export --frontend-only --no-zip'] # export the frontend to a static folder

# install caddy phase
[phases.caddy]
    dependsOn = ['export'] # run after export
    nixpkgsArchive = 'ced9bf9f7c303c7d4acc6c4a1bb44368c6baae3f' # specify Caddy version
    nixPkgs = ['caddy'] # install Caddy

# format the caddyfile
[phases.fmt]
    dependsOn = ['caddy'] # run after caddy
    cmds = ['caddy fmt --overwrite'] # format the caddyfile and overwrite changes

# start phase
[start]
    cmd = 'parallel --ungroup --halt now,fail=1 ::: "reflex run --backend-only --env $ENV" "caddy run 2>&1"' # run backend and frontend in parallel
